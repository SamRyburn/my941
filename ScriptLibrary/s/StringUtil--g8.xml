<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;StringUtil&quot;" recordid="StringUtil">
    <name type="string">StringUtil</name>
    <script type="string">/*
 * Deprecated
 * Try to find what you need in lib.Underscore instead
*/

/**
 * This file containes some common methods for string object
 */
 
// This function is used when generating XML
// to escape things like double quotes, reserved XML chars, etc.
function escapeStringforXML( value )
{
  if( value != null ) {
	  value = value.replace( /&amp;/g, "&amp;amp;" );   // escape all &amp; characters

	  value = value.replace( /&gt;/g, "&amp;gt;" );   // escape all &gt; characters

	  value = value.replace( /&lt;/g, "&amp;lt;" );   // escape all &lt; characters

	  value = value.replace( /"/g, "&amp;quot;" ); // escape all " characters to &amp;quot;
  }
  return value;
}


function escapeStr(str){
	if(str != null){
		str = str.replace("\\", "\\\\");
		str = str.replace("\"", "\\\"");
	}
	return str;
}


function escapeAllStr(str) {
	if (str != null) {
		str = str.replace(/\\/g, "\\\\");
		str = str.replace(/"/g, "\\\"");
	}
	return  str;
}

function escapeAllBackSlash(str) {
	if (str != null) {
		str = str.replace(/\\/g, "\\\\");
	}
	return  str;
}

/**
* Search all date type part of string and convert to the correct time zone and data order
* @param {string} string - The input string
* @param {boolean} reverse - true to convert local to GMT, false to convert GMT to local. Default is false.
* @param {boolean} hasQuotation - true to has single quotation for date part and false not. Default is true.
* @return the converted string
**/
function convertDateInString(string, reverse, hasQuotation)
{
    if (string == null)
        return string;
    
    if (reverse == null)
    {
        reverse = false;
    }
    
    if (hasQuotation == null)
    {
        hasQuotation = true;
    }
        
    var newstr = "";
    
    var index = [];
    var lastindex = [];
    lastindex.push(0);
    var orig = [];
    var dest = [];
        
    var pattern;
    var offset=0;
    var dateseparator="\/";
    if (reverse) 
    {
        var localtz=lib.tzFunctions.getTZFileByTZName(vars.$lo_time_zone);
        dateseparator=system.functions.nullsub(localtz.date_separator, "\/");
    }
    if (hasQuotation)
    {
        pattern=new RegExp("\'([0-9]+"+dateseparator+"[0-9]+"+dateseparator+"[0-9]+\s*( [0-9]+:[0-9]+(:[0-9]+)?)?)\'", "g");
        offset=1;
    }
    else 
    {
        pattern=new RegExp("([0-9]+"+dateseparator+"[0-9]+"+dateseparator+"[0-9]+\s*( [0-9]+:[0-9]+(:[0-9]+)?)?)", "g");
    }
    var matches = pattern.exec(string);
    while (matches != null)
    {
        index.push(matches.index+offset);
        lastindex.push(matches.index+matches[0].length-offset);
        var origstr=matches[0].substr(offset, matches[0].length - 2*offset);
        orig.push(origstr);
        if (reverse) 
        {
            dest.push(lib.tzFunctions.convertDateStringToGMT(origstr));
        }
        else
        {
            dest.push(lib.tzFunctions.convertDateStringToLocal(origstr));
        }
        matches=pattern.exec(string);
    }

    
    for (var i=0; i&lt;index.length; i++)
    {
        newstr+=string.substring(lastindex[i], index[i]);
        var str=dest[i];
        if (hasQuotation)
        {
            if (index[i]&gt;1)
            {
                var ch=string.charAt(index[i]-offset-1);
                if (ch == "'")
                {
                    str=orig[i];
                }
            }
            if (lastindex[i+1]&lt;string.length - 1)
            {
                var ch=string.charAt(lastindex[i+1]+1);
                if (ch == "'")
                {
                    str=orig[i];
                }
            }
        }
        newstr=newstr+str;
    }

    newstr+=string.substring(lastindex[index.length]);
    
    return newstr;
}</script>
    <package type="string">BaseUtilities</package>
    <sysmodtime type="dateTime">05/12/14 20:43:32</sysmodtime>
    <sysmoduser type="string">zhouanqing</sysmoduser>
    <sysmodcount type="decimal">17</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
