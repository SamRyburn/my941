<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;svcCatCategory&quot;" recordid="svcCatCategory">
    <name type="string">svcCatCategory</name>
    <script type="string">
/*   
*@Author Yu Li
*@Date since 08/06/2012    
*@Category Search
*/
var CONTAIN_CATEGORY="category";
var CONTAIN_BUNDLE_ITEM="item";


function CatalogItem (name,categoryType,parent)
{
	this.name = name; 
	this.categoryType = categoryType; 
	this.parent = parent;

}

function getAllItemsbyType(itemType,nonCart)
{
	var items =new Array();
	var fsvcCatalogItem = new SCFile("svcCatalog");
	
	var fSql = "type=\"" + itemType + "\" and active=true";
	if (nonCart)
		fSql+=" and non.cart=true ";
	else 
		fSql+=" and (non.cart=NULL or non.cart=false)";
	
	var fRlt = fsvcCatalogItem.doSelect(fSql);
	while (fRlt == RC_SUCCESS)
	{       
		items.push( new CatalogItem( fsvcCatalogItem.name, fsvcCatalogItem.category_type,  fsvcCatalogItem.parent.toArray() ) ); 
		fRlt = fsvcCatalogItem.getNext();
	}
	return items;           
}

function isBottonCategoryItem( itemName)
{

    var fsvcCatalogItem = new SCFile("svcCatalog");
    var fSql = "name=\"" + itemName + "\"";
    var fRlt = fsvcCatalogItem.doSelect(fSql);     
    while (fRlt == RC_SUCCESS)
    {   
        if (CONTAIN_BUNDLE_ITEM==fsvcCatalogItem.category_type)
        {	
        	return true;
        } else if (CONTAIN_CATEGORY==fsvcCatalogItem.category_type)
        {
            return false;
        }else
        {
            return false;
        }
    }
    return false;


}
function getAllChildCategoryItem(rootItem,items)
{
  
    var childItems=new Array();
    var restItems=new Array();
    var cItems=new Array();
    while(items.length&gt;0)
    {
		var item=items.pop();
      	if (indexOf(rootItem.name,item.parent)&gt;0)
      	{  
			childItems.push(item); 
         	if (CONTAIN_CATEGORY==item.categoryType)
         	{
				while(restItems.length&gt;0)
            	{
                 	items.push(restItems.pop());
            	}
            	cItems=getAllChildCategoryItem(item,items); 
            	while(cItems.length&gt;0)
            	{
                	childItems.push(cItems.pop());
            	}
            }
         
   
      	}else{
      		restItems.push(item);   
		}
     
    }

    return childItems;

}

function getAllBottomCategoryItem(rootItem,items)
{
  
	var btomItems=new Array();
    var restItems=new Array();
    var bItems=new Array();
    while(items.length&gt;0)
    {
      
      var item=items.pop();
  
      if (indexOf(rootItem.name,item.parent)&gt;0)
      {
      
         if (CONTAIN_BUNDLE_ITEM==item.categoryType)
         {
         
             btomItems.push(item);
         
         }else{

           
             while(restItems.length&gt;0)
             {
                
                 items.push(restItems.pop());
             }
           
             bItems=getAllBottomCategoryItem(item,items);
            
             while(bItems.length&gt;0)
             {
                btomItems.push(bItems.pop());
             }
         }
         
   
      }else{
         
         restItems.push(item);   
  
      }
    }

    return btomItems;

}

function buildCatQuery(itemName,isAll,nonCart)
{
	var sql="";
  	var items=new Array();
  	var itemNames=new Array();
  	if (isBottonCategoryItem(itemName))
  	{
    	sql="parent=\""+itemName+"\"";
  
  	} else {
  	
  		var items=getAllItemsbyType("category",nonCart);
 		var catalogItem=new CatalogItem(itemName);
 		if (isAll)
 		{
 	    	items=getAllChildCategoryItem(catalogItem, items);
 	    	items.push(catalogItem);
 		}else{
 	
 			items=getAllBottomCategoryItem(catalogItem,items);
  	
  		}

  		while( items.length&gt;0 )
 		{
 			itemNames.push(escape(items.pop().name));
 		}
		sql= "parent isin {\""+itemNames.join('","')+"\"}";
	}
  return sql;
}

function buildSearchQuery(searchStr){
    return  "displayName=\""+ searchStr+ "\"" ;
}

function escape( str ) 
{
    return str ? str.replace( /(\\|"|')/g , '\\$1' ) : str;
}

function indexOf(item, itemArray)
{
	for( i=0;i&lt;itemArray.length; i++ )
    {
		if (item==itemArray[i])
			return i+1;
    }
    return -1;
   
}


















</script>
    <package type="string">Service Catalog</package>
    <sysmodtime type="dateTime">07/16/17 17:01:44</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
