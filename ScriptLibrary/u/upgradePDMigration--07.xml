<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;upgradePDMigration&quot;" recordid="upgradePDMigration">
    <name type="string">upgradePDMigration</name>
    <script type="string">// Copy from ScriptLibrary PDCodeMigration
function prepareCategories2Migrate() {
    var sdCatSelected = [],
        imCatSelected = [],
        pmCatSelected = [],
        allCat = [];

    var category = new SCFile("category");
    var rc = category.doSelect('true');
    while (rc == RC_SUCCESS) {
        if (category.name == "problem") {
            pmCatSelected.push(category.name);
        } else if (category.name == "service catalog") {
            sdCatSelected.push(category.name);
        } else if (category.name == "incident" || category.name == "request for information"|| category.name == "request for change" || category.name == "complaint") {
            sdCatSelected.push(category.name);
            imCatSelected.push(category.name);
        } else if (!(category.name.indexOf("NEW")==0 || category.name.indexOf("OLD")==0 || category.name.indexOf("PRE")==0) &amp;&amp; category.active) {
            sdCatSelected.push(category.name);
            imCatSelected.push(category.name);
            pmCatSelected.push(category.name);
        }
        allCat.push(category.name);
        rc = category.getNext();
    }

    vars['$sdcat2migrate.selected'] = sdCatSelected;
    vars['$imcat2migrate.selected'] = imCatSelected;
    vars['$pmcat2migrate.selected'] = pmCatSelected;
    vars['$cat2migrate'] = allCat;
}

function isPDMigrationEnabled() {
    var pdVersion = lib.upgradeVersionUtil.getPdVersion();
    
    if (pdVersion != "PDCP3")
        return false;
        
    return true;
}

function executePdMigration() {
    if (!isPDMigrationEnabled())
        return;
        
    var upgradestatus = lib.upgradeUtility.getRecord("upgradestatus", "true");
    if (upgradestatus == null) 
        return;
        
    lib.upgradeLog.upgrade("Execute PD Migration.");
    lib.upgradeLog.detail("Execute PD Migration.");
    
    if (upgradestatus["option"] == "rename") {
        vars["$use.pd.solution.matching"] = upgradestatus["use.pd.solution"];
        vars["$sync.category.back"] = upgradestatus["sync.category"];
        vars["$sdcat2migrate.selected"] = upgradestatus["sdCategory.selected"];
        vars["$imcat2migrate.selected"] = upgradestatus["imCategory.selected"];
        vars["$pmcat2migrate.selected"] = upgradestatus["pmCategory.selected"];
    
        lib.PDCodeMigration.migrateByModules();
        handleResult4PDMigration();
    } else if (upgradestatus["option"] == "unconditional") {
        lib.PDCodeMigration. migrateIncidentCategories(true);
    }
}

function handleResult4PDMigration() {
    var pdmpatch = new SCFile("pdmpatches");
    var rc = pdmpatch.doSelect("true");
    while (rc==RC_SUCCESS) {
        var obname=lib.upgradeHelper.getObjectNameFromTag(pdmpatch["filename"], pdmpatch["tag"]);
        var result=lib.upgradeUtility.getRecord("upgraderesults", "object.type=\""+pdmpatch["filename"]+"\" and object.name=\""+obname+"\"");
        if (result!=null) {
            result["version.reconciled"]="PD Migration: Updated";
            if (result["result"] == "Already Current") {
                result["result"] = "Upgraded";
            }
            result.doUpdate();
        } else {
            result = new SCFile("upgraderesults");
            result["object.type"] = pdmpatch["filename"];
            result["object.name"] = obname;
            result["result"] = "Added";
            result["version.reconciled"]="PD Migration: Added";
            result["query"] = lib.upgradeHelper.getTagQueryFromName(pdmpatch["filename"], pdmpatch["tag"]);
            result.doInsert();
        }
        rc=pdmpatch.getNext();
    }
}
</script>
    <package type="string">Upgrade</package>
    <sysmodtime type="dateTime">07/16/17 17:01:45</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted type="boolean">true</sysrestricted>
  </record>
</recordset>
