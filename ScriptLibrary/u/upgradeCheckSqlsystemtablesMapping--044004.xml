<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;upgradeCheckSqlsystemtablesMapping&quot;" recordid="upgradeCheckSqlsystemtablesMapping">
    <name type="string">upgradeCheckSqlsystemtablesMapping</name>
    <script type="string">/***
*				SM Upgrade 
*
* Check sqlsystemtables make sure do right remap works for SM.
* 
* Tod
* 2011-01-18
***/


/**
*    insert blob tables' name to table "upgsqlsys"
*	"upgsqlsys" remember old dbdict blob tables' status
**/
function saveDbdictTableStatus() {
	var dbdict = new SCFile("dbdict");
	var rc = dbdict.doSelect(true);
	var array = new Datum();
	
	while (rc == RC_SUCCESS) {
				
		if (dbdict.field[0].sql_field_options.sql_data_type != null) {
			array.push(dbdict.name);// table name
		}
		
		rc = dbdict.getNext();
	}
	var upgsqlsys = new SCFile("upgsqlsys");
	upgsqlsys.unique = "UPGRADE";
	upgsqlsys.system_tables = array;
	upgsqlsys.doInsert();
	
	lib.upgradeLog.scUpgrade(9084);
	lib.upgradeLog.scDetail(9084);
}


/**
*   compare SM930 sqlsystemtables records with old records, add different records to remap array
*   @remapArray  array for remap
**/
function compareSqlsystemtables() {
	// Log: Start comparing sqlsystemtables ...
	lib.upgradeLog.scUpgrade(1160);
	lib.upgradeLog.scDetail(1160);
	
	var oldtables = getOldSqlsys();
	var newtables = getNewSqlsys();
	var remapArray = new Datum();
	
	if (oldtables != null &amp;&amp; oldtables != undefined 
			&amp;&amp; newtables != null &amp;&amp; newtables != undefined) {
    	for (var i=0; i&lt;oldtables.length(); i++) {
    	//QCCR1E63576 - only remap the systemperform table, modified by LiuYongliang
			if (oldtables[i]=="systemperform"
					&amp;&amp; system.functions.index(oldtables[i], newtables) == 0) {
				var remapItem = new Datum();
				remapItem.push(true); // Blob --&gt; Noblob
				remapItem.push(oldtables[i]); 
				remapArray.push(remapItem);
			}
		}
		
		for (var i=0; i&lt;newtables.length(); i++) {
			if (system.functions.index(newtables[i], oldtables) == 0 
					&amp;&amp; isExistInDbdict(newtables[i]) 
					//QCCR1E63576 - skip the code and ScriptLibrary table, modified by LiuYongliang					
					&amp;&amp; newtables[i] != "code" 
					&amp;&amp; newtables[i] != "ScriptLibrary"
					&amp;&amp; newtables[i].indexOf("upgrade") != 0) // filter upgrade tables
					 {
				var remapItem = new Datum();
				remapItem.push(false); // Noblob --&gt; Blob
				remapItem.push(newtables[i]);
				remapArray.push(remapItem);
			}
		}
    } 
    // Log: Finsh comparing sqlsystemtables ...
	lib.upgradeLog.scUpgrade(1161);
	lib.upgradeLog.scDetail(1161);
	return remapArray;
	
}

function getNewSqlsys() {
	var newsqlsys = new SCFile("sqlsystemtables");
	var rc = newsqlsys.doSelect(true);
	var array = new Datum();
	while (rc == RC_SUCCESS) {
		array.push(newsqlsys.dbdict);
		rc = newsqlsys.getNext();
	}
	return array;
}

function getOldSqlsys() {
	var oldsqlsys = new SCFile("upgsqlsys");
	try {
		var rc = oldsqlsys.doSelect(true);//"dbdict=\"systemperform\""
	} catch (err) {
		// Log: Table [upgsqlsys] does not exist in current SM.
		lib.upgradeLog.scError(1163);
	}

	if (rc == RC_SUCCESS) {
		return oldsqlsys.system_tables;
	} 
	
	if (rc == RC_NO_MORE) {
		// Log: Table [upgsqlsys] has no record, please import records at first.
		lib.upgradeLog.scError(1164);
	}
	
	return null;
}

/**
*	print remap log
*   @param  remap array item
**/
function printRemapLog(remapItem) {
	if (remapItem == null || remapItem[0] == null) {
		return;
	}
	if (remapItem[0]) {
		// Log: Remap table: table [%S] from Blob to Noblob.
		lib.upgradeLog.scDetail(1166, [remapItem[1]]);
	} else {
		// Log: Remap table: table [%S] from Noblob to Blob.
		lib.upgradeLog.scDetail(1167, [remapItem[1]]);
	}
}

function isExistInDbdict(tableName) {
	var dbdict = new SCFile("dbdict");
	var rc = dbdict.doSelect("name=\"" + tableName + "\"");
	return rc == RC_SUCCESS ? true : false;
}
</script>
    <package type="string">Upgrade</package>
    <sysmodtime type="dateTime">07/16/17 17:01:45</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
