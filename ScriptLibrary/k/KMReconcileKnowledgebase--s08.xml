<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;KMReconcileKnowledgebase&quot;" recordid="KMReconcileKnowledgebase">
    <name type="string">KMReconcileKnowledgebase</name>
    <script type="string">//This will schedule the KMUpdate scheduler background process to run a reconcile of the database documents 
//against the KM Search Engine Indexes.  Note that regular processing of the KMUpdate will not run while this reconcile is processing.

//To run this in the background, go to the KMScheduleReconcileKB Script Library and follow the instructions there.

//To run this in the foreground (which will lock your client until the process completes) uncoment the last line of this script
//library and follow the instructions there.

function reconcileKnowledgebase( strKBName )
{
	var fKB = new SCFile("kmknowledgebase");
	var fKBFile;
	var strKBQuery;
	var strId;
	var serverspec = vars.$G_km_globalenv.km_host + ":"+ vars.$G_km_globalenv.km_searchport;
	var hitlist = new SCFile("kmhitlist");
	var hitlistfields = new Datum();
	hitlistfields.setType(8);
	hitlistfields.push("id");
	var strQuery;
	var colls = new Datum();
	colls.setType(8);
	colls.push(strKBName);	
	var doccount = 0;
	var addcount = 0;
	var starttime = new Date();
	var endtime;
	
	
	//query for kmknowledgebase
	fKB.doSelect("kbname=\"" + strKBName + "\"");
	if( getLastRC() != RC_SUCCESS)
	{
		print("Unable to locate kmknowledgebase record for " + strKBName );
		return;
	}
	
	//create a file variable for the knowledgebase table we are indexing.  Issue a query based on the query
	//field specified in the kmknolwdgebase record.
	fKBFile = new SCFile(fKB.sclibtablename);
	fKBFile.doSelect(fKB.scquery);
	if( getLastRC() != RC_SUCCESS)
	{
		print("No records returned from kmknowledgebase query.");
		return;
	}
	fKBFile.getFirst();
	
	//we have our recordset for the knowledgebase now iterate each document and verify it exists in the index.
	while( getLastRC() == RC_SUCCESS )
	{
		doccount++;
		var hitarray = new Datum();
		hitarray.setType(8);
		
		strId = fKBFile[fKB.docid];
				
		//build query
		strQuery =  "(id &lt;MATCHES&gt; " + strId + " &lt;AND&gt; _style &lt;CONTAINS&gt; " + strKBName +")";
		
		var rc = system.functions.plugin("KMPLUGIN", "SEARCH", serverspec, "", "0", strQuery, colls, hitlistfields, hitarray );

		if (system.functions.same(hitarray,{}) || hitarray[0]== "0")
		{
			var fKBUpdates = new SCFile("kmknowledgebaseupdates");
			fKBUpdates.action = "U";
			fKBUpdates.docid = strId;
			fKBUpdates.collectionname = strKBName;
			fKBUpdates.doSave();
			addcount++;
		}
		
		fKBFile.getNext();
	}
	endtime = new Date();
	print("Reconcile Knowledgebase completed.");
	print("Reconciled " + doccount+ " documents.");
	print("Added " + addcount + " documents to the index.");
	print("Reconcile started: " + starttime);
	print("Reconcile ended: " + endtime);	
}

function scheduleReconcileKnowledgebase(strKBName)
{
	var currentTime = new XMLDate(new Date());
	var fSchedule = new SCFile("schedule");
	var callRtn = new SCDatum;
	var nextNumber = new SCDatum;
	
	fSchedule.name = "KM Reconcile Knowledgebase - " + strKBName;
	system.functions.rtecall("getnumber", callRtn, nextNumber, "schedule");
	fSchedule.schedule_id = nextNumber; 
	fSchedule._class = "KMUpdate";
	fSchedule.expiration= currentTime.getDatum();
	fSchedule.javascript="system.library.KMReconcileKnowledgebase.reconcileKnowledgebase(\"" + strKBName + "\");";
	fSchedule.doInsert();
}

//For foreground processing only ...
//change this parameter to the KB you wish to reconcile
//Modify the parameter to correspond to the Knowledgebase name you wish to reconcile.  
//Press "Save", Press "Compile" (ensure no errors), Press "Execute"
//system.library.KMReconcileKnowledgebase.reconcileKnowledgebase("Knowledge_Library");</script>
    <package type="string">KnowledgeManagement</package>
    <sysmodtime type="dateTime">07/16/17 17:01:41</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
