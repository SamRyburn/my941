<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<recordset table="ScriptLibrary">
  <record id="name=&quot;DemoData&quot;" recordid="DemoData">
    <name type="string">DemoData</name>
    <script type="string">var $ = lib.c.$;
var log = getLog("DemoData");

/**
 * Unload demo data
 *
 * @param {String} path
 * @returns {Number}
 */
function unload(path)
{
	var unloadName = "OutofBoxData";
	var fUnload = $("unload", SCFILE_READONLY).select("name=\"" + unloadName + "\"").uniqueResult();
	
	if (!fUnload)
	{
		print(system.functions.scmsg(676, "us", ["unload", unloadName]));
		return -1;
	}
	
	var output = path;
	// if path not set, export to current folder with default name
	if (output == null)
	{
		output = "demodata.unl";
	}
	
	return callrad("us.unload.process", ["name","prompt"], [fUnload, output]);
}


/**
 * Post process after load demo data
 */
function postProcessAfterLoad()
{
	// fix Counters
	log.debug("fix counters");
	lib.upgradeCommonHelper.fixCounters();
	
	// fix numbers	
	log.debug("fix number");
	//lib.upgradeCommonHelper.fixNumbers();
	fixNumbers();

	// migrate legacy groups	
	if (lib.ProcessDesignerEnablement.isRequestEnabled())
	{
		log.debug("enabling assignment group");
		lib.MergeGroupsUtil.DataMigrationForLegacyGroups();
	}
	
	// refresh globallists
	refreshGlobalList();
}


/**
 * Fix numbers
 */
function fixNumbers()
{
	$('number').selectAll().iterate(function (rel) 
	{
		var name = rel['name'];
		var prefix = rel['prefix'];
		var suffix = rel['suffix'];
		var fileName = getNumberFileName(name);
		
		var key = getNumberKeyField(fileName, prefix, suffix);
		if (key) 
		{
			var maxNumber = 0;
			if (prefix)
			{
				maxNumber = getMaxNumber(fileName, key, prefix);
			}
			else
			{
				maxNumber = getMaxNumberBySQL(fileName, key);
			}
		
			if (rel['number'] &amp;&amp; maxNumber &amp;&amp; rel['number'] &lt; maxNumber) 
			{
				log.debug("change number table: file name: " + fileName + ", number from " + rel['number'] + " to " + maxNumber);
				rel['number'] = maxNumber;
				rel.doUpdate();
			}
		}
	});
}


function getNumberFileName(numberName) 
{
	var obj = new SCFile("Object", SCFILE_READONLY);
	obj.setFields(["number.record", "file.name"]);
	var rc = obj.doSelect("number.record=\"" + numberName + "\"");
	if (rc == RC_SUCCESS) 
	{
		return obj["file.name"];
	}
	return numberName;
}


function getNumberKeyField(fileName, prefix) 
{
	var key = system.functions.dbdict_helper("unique.key", fileName);
	if (!key)
	{
		return null;
	}
	var jsKey = key.toArray();
	var file = new SCFile(fileName, SCFILE_READONLY);
	file.setFields(jsKey);
	var rc = file.doSelect("true");
	if (rc == RC_SUCCESS) 
	{
		var i;
		for (i = 0; i &lt; jsKey.length; i++) 
		{
			var isStrOrNum = ((typeof file[jsKey[i]] == "string") || (typeof file[jsKey[i]] == "number"));
			if (isStrOrNum &amp;&amp; prefix &amp;&amp; file[jsKey[i]].indexOf(prefix) == 0)
			{
				return jsKey[i];
			}
			if (isStrOrNum &amp;&amp; !prefix &amp;&amp; !isNaN(file[jsKey[i]]))
			{
				return jsKey[i];
			}
		}
	}
		
	return null;
}


function getMaxNumber(fileName, keyField, prefix) 
{
	var file = new SCFile(fileName, SCFILE_READONLY);
	file.setFields([keyField]);
	var rc = file.doSelect("true");
	var maxValue = 0;
	while (rc == RC_SUCCESS) 
	{
		var tmpV = file[keyField];
		if (prefix &amp;&amp; tmpV)
		{
			tmpV = tmpV.substring(prefix.length);
		}
		if (typeof tmpV == "string")
		{
			tmpV = Number(tmpV).valueOf();
		}
		if (tmpV &amp;&amp; maxValue &lt; tmpV)
		{
			maxValue = tmpV;
		}
		rc = file.getNext();
	}
	
	return maxValue;
}


function getMaxNumberBySQL(fileName, numberField) 
{
	var file = new SCFile(fileName, SCFILE_READONLY);
	var rc = file.doSelect("select MAX(" + numberField + ") from " + fileName);
	return Number(file[0]).valueOf();
}


/**
 * Refresh globallist after load demo data
 */
function refreshGlobalList()
{
	// update globallists those filename not null
	$("globallists").selectAll().iterate(function(list)
	{
		if (list.filename == null || list.filename.length == 0)
		{
			return;
		}

		var rc;	
		
		if (list.build_startup)
		{
			// update expiration date if build at startup
			list.expiration = new Date();
			rc = list.doUpdate();
		}
		else
		{
			// rebuild if not build at startup
		    rc = callrad("apm.server.initer", ["names"], [[list.name]]);		
		}
		
		if (rc == RC_SUCCESS)
		{
			log.debug(system.functions.scmsg(201, "object", ["globallists", list.name]));
		}
		else
		{
			log.warn(system.functions.scmsg(121, "patchrel", ["globallists", list.name]));
		}
		
	});
}</script>
    <package type="string">Tailoring</package>
    <sysmodtime type="dateTime">07/16/17 17:01:39</sysmodtime>
    <sysmoduser type="string">falcon</sysmoduser>
    <sysmodcount type="decimal">0</sysmodcount>
    <prgnsystem NullValue="1" type="boolean"/>
    <sysrestricted NullValue="1" type="boolean"/>
  </record>
</recordset>
